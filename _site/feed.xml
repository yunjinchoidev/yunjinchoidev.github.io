<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-03-17T20:35:36+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Reinvent love! - Democratization of Love</title><subtitle>NLP 쪼렙입니다.</subtitle><author><name>최윤진</name><email>yunjinchoidev@gmail.com</email></author><entry><title type="html">Post: ai tech -Day10</title><link href="http://localhost:4000/aitech_daily/post-day10/" rel="alternate" type="text/html" title="Post: ai tech -Day10" /><published>2023-03-17T00:00:00+09:00</published><updated>2023-03-08T06:20:02+09:00</updated><id>http://localhost:4000/aitech_daily/post-day10</id><content type="html" xml:base="http://localhost:4000/aitech_daily/post-day10/"><![CDATA[<p><img src="../../../image/aitech.png" alt="image" /></p>]]></content><author><name>최윤진</name><email>yunjinchoidev@gmail.com</email></author><category term="aitech_daily" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Post: ai tech -Day09</title><link href="http://localhost:4000/aitech_daily/post-day09/" rel="alternate" type="text/html" title="Post: ai tech -Day09" /><published>2023-03-16T00:00:00+09:00</published><updated>2023-03-08T06:20:02+09:00</updated><id>http://localhost:4000/aitech_daily/post-day09</id><content type="html" xml:base="http://localhost:4000/aitech_daily/post-day09/"><![CDATA[<p><img src="../../../image/aitech.png" alt="image" /></p>

<h1 id="5f">5F</h1>
<h2 id="그날의-사실-facts-">그날의 사실 (Facts) :</h2>

<h2 id="느낌-feeling-">느낌 (Feeling) :</h2>

<h2 id="배운점-findings-">배운점 (Findings) :</h2>

<h2 id="미래의-행동계획-future-">미래의 행동계획 (Future) :</h2>

<h2 id="피드백-feedback-">피드백 (Feedback) :</h2>]]></content><author><name>최윤진</name><email>yunjinchoidev@gmail.com</email></author><category term="aitech_daily" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Post: ai tech -Day08</title><link href="http://localhost:4000/aitech_daily/post-day08/" rel="alternate" type="text/html" title="Post: ai tech -Day08" /><published>2023-03-15T00:00:00+09:00</published><updated>2023-03-08T06:20:02+09:00</updated><id>http://localhost:4000/aitech_daily/post-day08</id><content type="html" xml:base="http://localhost:4000/aitech_daily/post-day08/"><![CDATA[<p><img src="../../../image/aitech.png" alt="image" /></p>

<h1 id="5f">5F</h1>
<h2 id="그날의-사실-facts-">그날의 사실 (Facts) :</h2>
<p>과제1, 과제 2을 풀었습니다. 강의와 <code class="language-plaintext highlighter-rouge">딥러닝 파이토치 교과서</code> 라는 책을 병행하면서 과제를 풀고 있습니다. 팀원들과 그리디 알고리즘 2 문제를 풀었습니다.</p>

<h2 id="느낌-feeling-">느낌 (Feeling) :</h2>

<h2 id="배운점-findings-">배운점 (Findings) :</h2>

<h2 id="미래의-행동계획-future-">미래의 행동계획 (Future) :</h2>

<h2 id="피드백-feedback-">피드백 (Feedback) :</h2>]]></content><author><name>최윤진</name><email>yunjinchoidev@gmail.com</email></author><category term="aitech_daily" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Post: ai tech -Day07</title><link href="http://localhost:4000/aitech_daily/post-day07/" rel="alternate" type="text/html" title="Post: ai tech -Day07" /><published>2023-03-14T00:00:00+09:00</published><updated>2023-03-08T06:20:02+09:00</updated><id>http://localhost:4000/aitech_daily/post-day07</id><content type="html" xml:base="http://localhost:4000/aitech_daily/post-day07/"><![CDATA[<p><img src="../../../image/aitech.png" alt="image" /></p>

<h1 id="5f">5F</h1>
<h2 id="그날의-사실-facts-">그날의 사실 (Facts) :</h2>
<p>파이토치 autograd, dataset, dataLoader 에 대해 공부했습니다. 구글링을 하지 않고 과제를 풀었습니다. 파이토치 공식 문서를 하루 종일 보면서 몇 문제를 남겨놓고 어찌어찌 풀긴 풀었습니다. 기분이 좋기도 하지만 그 과정이 너무 힘들었습니다. 지문이 상당히 많은데 복습하는데 시간을 써야 겠습니다. DataLoader 부분을 현재 풀고 있는데 좌절감이 듭니다. 하나부터 열까지 머리를 지끈지끈하게 합니다. 이런 노력의 결과가 피와 살이 될꺼라는 것을 알고 있지만 고통스럽네요.</p>

<p>오후 피어세션 동안은 팀원들과 [이것이 코딩 테스트다] 책의 <code class="language-plaintext highlighter-rouge">그리디 알고리즘</code> 을 풀었습니다. PR 방식으로 서로 코멘트를 남겨주는 방식으로 진행했는데요. 상당히 깔끔했습니다. 다들 열심히 풀었고 리뷰도 잘 해줘서 이대로 쭉 진행하면 큰 성장이 있을 것 같습니다.</p>

<h2 id="느낌-feeling-">느낌 (Feeling) :</h2>
<p>결국 기본이 탄탄해야 합니다. 파이토치를 잘 할 수 있다는 것은 파이썬을 잘 다룬다는 것이고 수학적 지식이 탄단하다는 것입니다. 다음 딥러닝 구현 공부에 들어갈 때는 단단한 파이토치 실력이 있어야 겠지요. 실력은 하루 아침에 생기는 것이 아닙니다. 바닥 부터 천천히 쌓아나갈 때 <code class="language-plaintext highlighter-rouge">비로소 내가 해냈구나</code> 라는 감정이 들겠지요.</p>

<h2 id="배운점-findings-">배운점 (Findings) :</h2>
<p>꾸준함입니다. 결국 지금의 어려운 과제들도 시간을 들이면 풀 수 있다고 생각합니다. 활용 하기 위해선, 딥러닝을 내가 구축하기 위해선 이런 classic 한 것들을 잘 다룰 수 있어야 합니다.</p>

<h2 id="미래의-행동계획-future-">미래의 행동계획 (Future) :</h2>
<p>파이토치 강좌에 너무 연연하지 말고 순수 공부 시간을 늘려야 겠습니다. 좋은 강의 이지만 강의에 집중하다가는 지식을 제대로 못 쌓을 확률이 높습니다. 펜을 들고 공부해야 겠습니다.</p>

<h2 id="피드백-feedback-">피드백 (Feedback) :</h2>
<p>다시 드는 생각입니다. 체력 관리가 중요합니다. 오늘 따라 굉장히 피곤했습니다. 잘 쉬고 잘 공부해야 겠습니다.</p>]]></content><author><name>최윤진</name><email>yunjinchoidev@gmail.com</email></author><category term="aitech_daily" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Post: ai tech - Day06</title><link href="http://localhost:4000/aitech_daily/post-day06/" rel="alternate" type="text/html" title="Post: ai tech - Day06" /><published>2023-03-13T00:00:00+09:00</published><updated>2023-03-14T06:20:02+09:00</updated><id>http://localhost:4000/aitech_daily/post-day06</id><content type="html" xml:base="http://localhost:4000/aitech_daily/post-day06/"><![CDATA[<p><img src="../../../image/aitech.png" alt="image" /></p>

<h1 id="5f">5F</h1>
<h2 id="그날의-사실-facts-">그날의 사실 (Facts) :</h2>
<p>파이토치 수업을 시작했습니다. 본격적인 딥러닝 구현을 들어가서 설렜습니다. 월요일 9시가 되고 과제를 열어보니 난이도가 꽤 있어서 걱정이 조금 되었습니다. 수요일 까지 최대한 빨리 끝내놓고 한 주의 마무리를 잘 해야 겠다는 다짐을 했습니다.</p>

<p>팀원들과 코딩테스트 스터디를 시작했습니다. [이것이 취업을 위한 코딩테스트다.] 라는 책으로 시작하게 되었는데요. 그리디 알고리즘 개념 공부와 함께 있는 3 문제를 같이 풀었습니다.</p>

<h2 id="느낌-feeling-">느낌 (Feeling) :</h2>
<p>강제로 코드를 치다 보니 손에 익는 것은 분명 있습니다. 파이토치 공부를 하면서 매번 눈으로만 배우는 습관을 가지고 있었는데 이번에는 마음을 다잡고 하나 하나 쳐가면서 공부를 하고 있습니다. 코드는 역시 쳐서 돌려봐야 내것이 되나 봅니다.</p>

<h2 id="배운점-findings-">배운점 (Findings) :</h2>
<p>pytoch를 사용하는 이유, 기초 사용법, Documentation 읽는 법 등을 배웠습니다.</p>

<h2 id="미래의-행동계획-future-">미래의 행동계획 (Future) :</h2>
<p>코딩테스트 문제는 하루에 2 문제 씩 계속 풀려고 합니다.</p>

<h2 id="피드백-feedback-">피드백 (Feedback) :</h2>
<p>휴식 시간을 잘 가져야겠습니다. 그리고 식사는 저녁까지 계속 굶다가 저녁에 한 끼만 먹는 것이 좋겠습니다.</p>]]></content><author><name>최윤진</name><email>yunjinchoidev@gmail.com</email></author><category term="aitech_daily" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Post: ai tech 2주차</title><link href="http://localhost:4000/aitech_weekly/post-2%EC%A3%BC%EC%B0%A8/" rel="alternate" type="text/html" title="Post: ai tech 2주차" /><published>2023-03-12T00:00:00+09:00</published><updated>2023-03-13T06:20:02+09:00</updated><id>http://localhost:4000/aitech_weekly/post-2%EC%A3%BC%EC%B0%A8</id><content type="html" xml:base="http://localhost:4000/aitech_weekly/post-2%EC%A3%BC%EC%B0%A8/"><![CDATA[<p><img src="../../../image/aitech.png" alt="image" /></p>

<h1 id="2주차-계획">[2주차 계획]</h1>
<ul class="task-list">
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />텐서보드 튜토리얼 코드 돌리기</li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />WanB 튜토리얼 코드 돌려보기</li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />하이퍼 파라미터 튜닝 해보기</li>
  <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />코테 스터디 잘 참여하기</li>
</ul>

<h1 id="2주차를-보내며">[2주차를 보내며]</h1>

<blockquote>
  <ul>
    <li>강의 정리
      <ul>
        <li><a href="https://yunjinchoidev.github.io/aitech_knowledge/post-pytorch/">파이썬 강의록 정리</a></li>
      </ul>
    </li>
  </ul>
</blockquote>

<p>벌써 2주의 시간이 흘렀습니다. 첫 주차에 파이썬, 딥러닝 수학을 배웠고 이번주엔 딥러닝을 실제 구현 할 수 있는 <code class="language-plaintext highlighter-rouge">파이토치</code> 를 배웠습니다. 파이토치의 기본적인 사용법, dataset, dataLoader 를 이용한 데이터 피딩 방법, <code class="language-plaintext highlighter-rouge">torch.module</code>, <code class="language-plaintext highlighter-rouge">torch.Parameter</code> 를 배웠고 <code class="language-plaintext highlighter-rouge">Tensorboard</code>, <code class="language-plaintext highlighter-rouge">Wandb</code> 등을 배습니다.</p>

<p>개념 자체는 그렇게 어렵지 않았습니다. 다만 문제는 그것을 응용하는 능력이었습니다. 이번 주 해결 해야 하는 과제는 pytorch 를 통해 모델을 구축할 수 있는 지, 데이터를 주입할 수 있는지, 전이 학습을 완성된 코드로 돌릴 수 있는지 여부였습니다.</p>

<p>쉽지 않았습니다. 구글링을 하지 않고 공식문서만 이용해서 풀어야 했기 때문에 깊은 인내가 필요했습니다. 하지만 5일의 시간을 투자해 pytorch 공식문서를 읽은 만큼 이해도 깊어졌다고 생각합니다.</p>

<p>팀원들과 코딩테스트 스터디를 시작했습니다. 하루에 두 문제를 풀고 PR을 올리면 동료들이 리뷰를 달아주고 피어세션 때 이야기를 나누는 방식으로 진행했습니다. 잘 진행이 되어서 이 방식을 5개월 동안 유지한다면 좋은 성과가 있을 거라고 생각합니다.</p>

<p>파이토치는 딥러닝 구현에 계속 사용되는 만큼 자유롭게 활용 할 수 있도록 손에 익혀야겠습니다. 일급 함수, OOP 등 파이썬에 대한 깊은 이해도 꼭 필요할 거 같습니다. 익숙하지 않으니 코드 짜는데 많은 시간이 소요되더군요.</p>

<p>이렇게 2주차가 지나갔습니다. 다음주에는 딥러닝 Basic 강의가 시작되는데요. 모델 구현을 직접 코드로 짜보고 데이터를 주입해 학습시켜봐야겠습니다. 4월에 시작되는 프로젝트가 굉장히 기대가 됩니다.</p>

<p>ps. AI 엔지니어와 AI 리서처 중 어떤 것을 하고 싶은지 선택하는 게 중요할 것 같습니다. 
저는 db, infra, workflow, mlOps 등을 다루고 싶은게 많아 AI 엔지니어가 끌리더군요.</p>]]></content><author><name>최윤진</name><email>yunjinchoidev@gmail.com</email></author><category term="aitech_weekly" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Post: ai tech -Day05</title><link href="http://localhost:4000/aitech_daily/post-day05/" rel="alternate" type="text/html" title="Post: ai tech -Day05" /><published>2023-03-10T00:00:00+09:00</published><updated>2023-03-08T06:20:02+09:00</updated><id>http://localhost:4000/aitech_daily/post-day05</id><content type="html" xml:base="http://localhost:4000/aitech_daily/post-day05/"><![CDATA[<p><img src="../../../image/aitech.png" alt="image" /></p>]]></content><author><name>최윤진</name><email>yunjinchoidev@gmail.com</email></author><category term="aitech_daily" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Post: Attention is all you need</title><link href="http://localhost:4000/paper/post-attention-is-all-you-need/" rel="alternate" type="text/html" title="Post: Attention is all you need" /><published>2023-03-10T00:00:00+09:00</published><updated>2023-03-10T10:20:02+09:00</updated><id>http://localhost:4000/paper/post-attention%20is%20all%20you%20need</id><content type="html" xml:base="http://localhost:4000/paper/post-attention-is-all-you-need/"><![CDATA[<p><img src="../../../image/paper.png" alt="paper.png" /></p>

<h1 id="attention-is-all-you-need"><code class="language-plaintext highlighter-rouge">Attention is All you need</code></h1>

<h2 id="이-논문의-함의">이 논문의 함의!</h2>
<p>구글의 <code class="language-plaintext highlighter-rouge">Attention is All you</code> 논문을 통해 nlp 의 혁명이 일어났습니다. 
기존의 rnn 모델은 attention 모델로 대체되었습니다.
왜 이런 혁명이 일어났을 까요? 간단합니다. 뛰어난 성능 때문이죠.</p>]]></content><author><name>최윤진</name><email>yunjinchoidev@gmail.com</email></author><category term="paper" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Post: nlp 면접 준비</title><link href="http://localhost:4000/interview/post-%EC%9D%B8%ED%84%B0%EB%B7%B0/" rel="alternate" type="text/html" title="Post: nlp 면접 준비" /><published>2023-03-10T00:00:00+09:00</published><updated>2023-03-13T10:20:02+09:00</updated><id>http://localhost:4000/interview/post-%EC%9D%B8%ED%84%B0%EB%B7%B0</id><content type="html" xml:base="http://localhost:4000/interview/post-%EC%9D%B8%ED%84%B0%EB%B7%B0/"><![CDATA[<h1 id="nlp-면접-인터뷰-준비">nlp 면접 인터뷰 준비</h1>
<p>면접 준비를 한번 잘 해봅시다. 답을 나만의 언어로 천천히 기록해보도록 합시다.</p>

<p><br /><br /><br /><br /></p>

<h1 id="참고했던-자료">참고했던 자료</h1>
<ul>
  <li><a href="https://github.com/boostcamp-ai-tech-4/ai-tech-interview">링크1</a></li>
</ul>

<details>
<summary><strong>전이학습</strong></summary>
- 전이학습이란?

한 분야의 문제를 해결하기 위해서 얻은 지식과 정보를 다른 문제를 푸는데 사용하는 방식입니다.

전이학습을 위해서는 ImageNet과 같은 대량의 데이터셋으로 이미 학습이 되어있는 모델을 사용합니다. 이를 '사전에 학습된 모델' 혹은 'pretrained model'이라고 부릅니다. 
[[출처]](https://dacon.io/en/forum/405988)

</details>

<h2 id="interview-questions">Interview Questions</h2>

<h2 id="통계수학">통계/수학</h2>
<ul>
  <li>고유값(eigen value)와 고유벡터(eigen vector)이 무엇이고 왜 중요한지 설명해주세요.</li>
</ul>

<p>선형대수학에서 중요한 개념입니다. 선형대수학은 선형성을 가지는 대수를 연구하는 학문입니다.</p>

<ul>
  <li>샘플링(Sampling)과 리샘플링(Resampling)이 무엇이고 리샘플링의 장점을 말씀해주세요.</li>
  <li>확률 모형과 확률 변수는 무엇인가요?</li>
  <li>누적 분포 함수와 확률 밀도 함수는 무엇인가요? 수식과 함께 표현해주세요.</li>
  <li>조건부 확률은 무엇인가요?</li>
  <li>공분산과 상관계수는 무엇일까요? 수식과 함께 표현해주세요.</li>
  <li>신뢰 구간의 정의는 무엇인가요?</li>
  <li>p-value를 모르는 사람에게 설명한다면 어떻게 설명하실 건가요?</li>
  <li>R square의 의미는 무엇인가요?</li>
  <li>평균(mean)과 중앙값(median)중에 어떤 케이스에서 뭐를 써야할까요?</li>
  <li>중심극한정리는 왜 유용한걸까요?</li>
  <li>엔트로피(entropy)에 대해 설명해주세요. 가능하면 Information Gain도요.</li>
  <li>어떨 때 모수적 방법론을 쓸 수 있고, 어떨 때 비모수적 방법론을 쓸 수 있나요?</li>
  <li>“likelihood”와 “probability”의 차이는 무엇일까요?</li>
  <li>통계에서 사용되는 bootstrap의 의미는 무엇인가요.</li>
  <li>모수가 매우 적은 (수십개 이하) 케이스의 경우 어떤 방식으로 예측 모델을 수립할 수 있을까요?</li>
  <li>베이지안과 프리퀀티스트 간의 입장차이를 설명해주실 수 있나요?</li>
  <li>검정력(statistical power)은 무엇일까요?</li>
  <li>missing value가 있을 경우 채워야 할까요? 그 이유는 무엇인가요?</li>
  <li>아웃라이어의 판단하는 기준은 무엇인가요?</li>
  <li>필요한 표본의 크기를 어떻게 계산합니까?</li>
  <li>Bias를 통제하는 방법은 무엇입니까?</li>
  <li>로그 함수는 어떤 경우 유용합니까? 사례를 들어 설명해주세요.</li>
  <li>베르누이 분포 / 이항 분포 / 카테고리 분포 / 다항 분포 / 가우시안 정규 분포 / t 분포 / 카이제곱 분포 / F 분포 / 베타 분포 / 감마 분포에 대해 설명해주세요. 그리고 분포 간의 연관성도 설명해주세요.</li>
  <li>출장을 위해 비행기를 타려고 합니다. 당신은 우산을 가져가야 하는지 알고 싶어 출장지에 사는 친구 3명에게 무작위로 전화를 하고 비가 오는 경우를 독립적으로 질문해주세요. 각 친구는 2/3로 진실을 말하고 1/3으로 거짓을 말합니다. 3명의 친구가 모두 “그렇습니다. 비가 내리고 있습니다”라고 말했습니다. 실제로 비가 내릴 확률은 얼마입니까?</li>
</ul>

<p>머신러닝</p>

<ul>
  <li>알고 있는 metric에 대해 설명해주세요. (ex. RMSE, MAE, recall, precision …)</li>
  <li>정규화를 왜 해야할까요? 정규화의 방법은 무엇이 있나요?</li>
  <li>Local Minima와 Global Minimum에 대해 설명해주세요.</li>
  <li>차원의 저주에 대해 설명해주세요.</li>
  <li>dimension reduction기법으로 보통 어떤 것들이 있나요?</li>
  <li>PCA는 차원 축소 기법이면서, 데이터 압축 기법이기도 하고, 노이즈 제거기법이기도 합니다. 왜 그런지 설명해주실 수 있나요?</li>
  <li>LSA, LDA, SVD 등의 약자들이 어떤 뜻이고 서로 어떤 관계를 가지는지 설명할 수 있나요?</li>
  <li>Markov Chain을 고등학생에게 설명하려면 어떤 방식이 제일 좋을까요?</li>
  <li>텍스트 더미에서 주제를 추출해야 합니다. 어떤 방식으로 접근해 나가시겠나요?</li>
  <li>SVM은 왜 반대로 차원을 확장시키는 방식으로 동작할까요? SVM은 왜 좋을까요?</li>
  <li>다른 좋은 머신 러닝 대비, 오래된 기법인 나이브 베이즈(naive bayes)의 장점을 옹호해보세요.</li>
  <li>회귀 / 분류시 알맞은 metric은 무엇일까?</li>
  <li>Association Rule의 Support, Confidence, Lift에 대해 설명해주세요.</li>
  <li>최적화 기법중 Newton’s Method와 Gradient Descent 방법에 대해 알고 있나요?</li>
  <li>머신러닝(machine)적 접근방법과 통계(statistics)적 접근방법의 둘간에 차이에 대한 견해가 있나요?</li>
  <li>인공신경망(deep learning이전의 전통적인)이 가지는 일반적인 문제점은 무엇일까요?</li>
  <li>지금 나오고 있는 deep learning 계열의 혁신의 근간은 무엇이라고 생각하시나요?</li>
  <li>ROC 커브에 대해 설명해주실 수 있으신가요?</li>
  <li>여러분이 서버를 100대 가지고 있습니다. 이때 인공신경망보다 Random Forest를 써야하는 이유는 뭘까요?</li>
  <li>K-means의 대표적 의미론적 단점은 무엇인가요? (계산량 많다는것 말고)</li>
  <li>L1, L2 정규화에 대해 설명해주세요.</li>
  <li>Cross Validation은 무엇이고 어떻게 해야하나요?</li>
  <li>XGBoost을 아시나요? 왜 이 모델이 캐글에서 유명할까요?</li>
  <li>앙상블 방법엔 어떤 것들이 있나요?</li>
  <li>feature vector란 무엇일까요?</li>
  <li>좋은 모델의 정의는 무엇일까요?</li>
  <li>50개의 작은 의사결정 나무는 큰 의사결정 나무보다 괜찮을까요? 왜 그렇게 생각하나요?</li>
  <li>스팸 필터에 로지스틱 리그레션을 많이 사용하는 이유는 무엇일까요?</li>
  <li>OLS(ordinary least squre) regression의 공식은 무엇인가요?</li>
</ul>

<details>
<summary><a href="./answers/3-deep-learning.md"><strong>🧠 딥러닝</strong></a></summary>

- 딥러닝은 무엇인가요? 딥러닝과 머신러닝의 차이는?
- Cost Function과 Activation Function은 무엇인가요?
- Tensorflow, PyTorch 특징과 차이가 뭘까요?
- Data Normalization은 무엇이고 왜 필요한가요?
- 알고있는 Activation Function에 대해 알려주세요. (Sigmoid, ReLU, LeakyReLU, Tanh 등)
- 오버피팅일 경우 어떻게 대처해야 할까요?
- 하이퍼 파라미터는 무엇인가요?
- Weight Initialization 방법에 대해 말해주세요. 그리고 무엇을 많이 사용하나요?
- 볼츠만 머신은 무엇인가요?
- TF, PyTorch 등을 사용할 때 디버깅 노하우는?
- 뉴럴넷의 가장 큰 단점은 무엇인가? 이를 위해 나온 One-Shot Learning은 무엇인가?
- 요즘 Sigmoid 보다 ReLU를 많이 쓰는데 그 이유는?
  - Non-Linearity라는 말의 의미와 그 필요성은?
  - ReLU로 어떻게 곡선 함수를 근사하나?
  - ReLU의 문제점은?
  - Bias는 왜 있는걸까?
- Gradient Descent에 대해서 쉽게 설명한다면?
  - 왜 꼭 Gradient를 써야 할까? 그 그래프에서 가로축과 세로축 각각은 무엇인가? 실제 상황에서는 그 그래프가 어떻게 그려질까?
  - GD 중에 때때로 Loss가 증가하는 이유는?
  - Back Propagation에 대해서 쉽게 설명 한다면?
- Local Minima 문제에도 불구하고 딥러닝이 잘 되는 이유는?
  - GD가 Local Minima 문제를 피하는 방법은?
  - 찾은 해가 Global Minimum인지 아닌지 알 수 있는 방법은?
- Training 세트와 Test 세트를 분리하는 이유는?
  - Validation 세트가 따로 있는 이유는?
  - Test 세트가 오염되었다는 말의 뜻은?
  - Regularization이란 무엇인가?
- Batch Normalization의 효과는?
  - Dropout의 효과는?
  - BN 적용해서 학습 이후 실제 사용시에 주의할 점은? 코드로는?
  - GAN에서 Generator 쪽에도 BN을 적용해도 될까?
- SGD, RMSprop, Adam에 대해서 아는대로 설명한다면?
  - SGD에서 Stochastic의 의미는?
  - 미니배치를 작게 할때의 장단점은?
  - 모멘텀의 수식을 적어 본다면?
- 간단한 MNIST 분류기를 MLP+CPU 버전으로 numpy로 만든다면 몇줄일까?
  - 어느 정도 돌아가는 녀석을 작성하기까지 몇시간 정도 걸릴까?
  - Back Propagation은 몇줄인가?
  - CNN으로 바꾼다면 얼마나 추가될까?
- 간단한 MNIST 분류기를 TF, PyTorch 등으로 작성하는데 몇시간이 필요한가?
  - CNN이 아닌 MLP로 해도 잘 될까?
  - 마지막 레이어 부분에 대해서 설명 한다면?
  - 학습은 BCE loss로 하되 상황을 MSE loss로 보고 싶다면?
- 딥러닝할 때 GPU를 쓰면 좋은 이유는?
  - GPU를 두개 다 쓰고 싶다. 방법은?
  - 학습시 필요한 GPU 메모리는 어떻게 계산하는가?

</details>

<details>
<summary><a href="./answers/4-python.md"><strong>🐍 파이썬</strong></a></summary>

- What is the difference between list and tuples in Python?
- What are the key features of Python?
- What type of language is python? Programming or scripting?
- Python an interpreted language. Explain.
- What is pep 8?
- How is memory managed in Python?
- What is namespace in Python?
- What is PYTHONPATH?
- What are python modules? Name some commonly used built-in modules in Python?
- What are local variables and global variables in Python?
- Is python case sensitive?
- What is type conversion in Python?
- How to install Python on Windows and set path variable?
- Is indentation required in python?
- What is the difference between Python Arrays and lists?
- What are functions in Python?
- What is `__init__`?
- What is a lambda function?
- What is self in Python?
- How does break, continue and pass work?
- What does `[::-1]` do?
- How can you randomize the items of a list in place in Python?
- What’s the difference between iterator and iterable?
- How can you generate random numbers in Python?
- What is the difference between range &amp; xrange?
- How do you write comments in python?
- What is pickling and unpickling?
- What are the generators in python?
- How will you capitalize the first letter of string?
- How will you convert a string to all lowercase?
- How to comment multiple lines in python?
- What are docstrings in Python?
- What is the purpose of is, not and in operators?
- What is the usage of help() and dir() function in Python?
- Whenever Python exits, why isn’t all the memory de-allocated?
- What is a dictionary in Python?
- How can the ternary operators be used in python?
- What does this mean: `*args`, `**kwargs`? And why would we use it?
- What does len() do?
- Explain split(), sub(), subn() methods of “re” module in Python.
- What are negative indexes and why are they used?
- What are Python packages?
- How can files be deleted in Python?
- What are the built-in types of python?
- What advantages do NumPy arrays offer over (nested) Python lists?
- How to add values to a python array?
- How to remove values to a python array?
- Does Python have OOps concepts?
- What is the difference between deep and shallow copy?
- How is Multithreading achieved in Python?
- What is the process of compilation and linking in python?
- What are Python libraries? Name a few of them.
- What is split used for?
- How to import modules in python?
- Explain Inheritance in Python with an example.
- How are classes created in Python?
- What is monkey patching in Python?
- Does python support multiple inheritance?
- What is Polymorphism in Python?
- Define encapsulation in Python?
- How do you do data abstraction in Python?
- Does python make use of access specifiers?
- How to create an empty class in Python?
- What does an object() do?
- What is map function in Python?
- Is python numpy better than lists?
- What is GIL in Python language?
- What makes the CPython different from Python?
- What are Decorators in Python?
- What is object interning?
- What is @classmethod, @staticmethod, @property?

</details>

<details>
<summary><a href="./answers/5-network.md"><strong>🌐 네트워크</strong></a></summary>

- TCP/IP의 각 계층을 설명해주세요.
- OSI 7계층와 TCP/IP 계층의 차이를 설명해주세요.
- Frame, Packet, Segment, Datagram을 비교해주세요.
- TCP와 UDP의 차이를 설명해주세요.
- TCP와 UDP의 헤더를 비교해주세요.
- TCP의 3-way-handshake와 4-way-handshake를 비교 설명해주세요.
- TCP의 연결 설정 과정(3단계)과 연결 종료 과정(4단계)이 단계가 차이나는 이유가 무엇인가요?
- 만약 Server에서 FIN 플래그를 전송하기 전에 전송한 패킷이 Routing 지연이나 패킷 유실로 인한 재전송 등으로 인해 FIN 패킷보다 늦게 도착하는 상황이 발생하면 어떻게 될까요?
- 초기 Sequence Number인 ISN을 0부터 시작하지 않고 난수를 생성해서 설정하는 이유가 무엇인가요?
- HTTP와 HTTPS에 대해서 설명하고 차이점에 대해 설명해주세요.
- HTTP 요청/응답 헤더의 구조를 설명해주세요.
- HTTP와 HTTPS 동작 과정을 비교해주세요.
- CORS가 무엇인가요?
- HTTP GET과 POST 메서드를 비교/설명해주세요.
- 쿠키(Cookie)와 세션(Session)을 설명해주세요.
- DNS가 무엇인가요?
- REST와 RESTful의 개념을 설명하고 차이를 말해주세요.
- 소켓(Socket)이 무엇인가요? 자신 있는 언어로 간단히 소켓 생성 예시를 보여주세요.
- Socket.io와 WebSocket의 차이를 설명해주세요.
- IPv4와 IPv6 차이를 설명해주세요.
- MAC Address가 무엇인가요?
- 라우터와 스위치, 허브의 차이를 설명해주세요.
- SMTP가 무엇인가요?
- 노트북으로 `www.google.com`에 접속을 했습니다. 요청을 보내고 받기까지의 과정을 자세히 설명해주세요.
- 여러 네트워크 topology에 대해 간단히 소개해주세요.
- subnet mask에 대해서 설명해주세요.
- data encapsulation이 무엇인가요?
- DHCP를 설명해주세요.
- routing protocol을 몇 가지 설명해주세요. (ex. link state, distance vector)
- 이더넷(ethernet)이 무엇인가요?
- client와 server의 차이점을 설명해주세요.
- delay, timing(jitter), throughput 차이를 설명해주세요.

</details>

<details>
<summary><a href="./answers/6-operating-system.md"><strong>🖥️ 운영체제</strong></a></summary>

- 프로세스와 스레드의 차이(Process vs Thread)를 알려주세요.
- 멀티 프로세스 대신 멀티 스레드를 사용하는 이유를 설명해주세요.
- 캐시의 지역성에 대해 설명해주세요.
- Thread-safe에 대해 설명해주세요. (hint: critical section)
- 뮤텍스와 세마포어의 차이를 설명해주세요.
- 스케줄러가 무엇이고, 단기/중기/장기로 나누는 기준에 대해 설명해주세요.
- CPU 스케줄러인 FCFS, SJF, SRTF, Priority Scheduling, RR에 대해 간략히 설명해주세요.
- 동기와 비동기의 차이를 설명해주세요.
- 메모리 관리 전략에는 무엇이 있는지 간략히 설명해주세요.
- 가상 메모리에 대해 설명해주세요.
- 교착상태(데드락, Deadlock)의 개념과 조건을 설명해주세요.
- 사용자 수준 스레드와 커널 수준 스레드의 차이를 설명해주세요.
- 외부 단편화와 내부 단편화에 대해 설명해주세요.
- Context Switching이 무엇인지 설명하고 과정을 나열해주세요.
- Swapping에 대해 설명해주세요.

</details>

<details>
<summary><a href="./answers/7-data-structure.md"><strong>🗂 자료구조</strong></a></summary>

- linked list
  - single linked list
  - double linked list
  - circular linked list
- hash table
- stack
- queue
  - circular queue
- graph
- tree
  - binary tree
  - full binary tree
  - complete binary tree
  - bst(binary search tree)
- heap(binary heap)
  - min heap
  - max heap
- red-black tree
- b+ tree

</details>

<details>
<summary><a href="./answers/8-algorithm.md"><strong>🔻 알고리즘</strong></a></summary>

- 시간, 공간 복잡도
- Sort Algorithm
  - Bubble Sort
  - Selection Sort
  - Insertion Sort
  - Merge Sort
  - Heap Sort
  - Quick Sort
  - Counting Sort
  - Radix Sort
- Divide and Conquer
- Dynamic Programming
- Greedy Algorithm
- Graph
  - Graph Traversal: BFS, DFS
  - Shortest Path
    - Dijkstra
    - Floyd-Warshall
    - Bellman-Ford
  - Minimum Spanning Tree
    - Prim
    - Kruskal
  - Union-find
  - Topological sort

</details>

<hr />]]></content><author><name>최윤진</name><email>yunjinchoidev@gmail.com</email></author><category term="interview" /><summary type="html"><![CDATA[nlp 면접 인터뷰 준비 면접 준비를 한번 잘 해봅시다. 답을 나만의 언어로 천천히 기록해보도록 합시다.]]></summary></entry><entry><title type="html">Post: 챗봇 만들기</title><link href="http://localhost:4000/chatbot/post-%EC%B1%97%EB%B4%87/" rel="alternate" type="text/html" title="Post: 챗봇 만들기" /><published>2023-03-10T00:00:00+09:00</published><updated>2023-03-10T10:20:02+09:00</updated><id>http://localhost:4000/chatbot/post-%EC%B1%97%EB%B4%87</id><content type="html" xml:base="http://localhost:4000/chatbot/post-%EC%B1%97%EB%B4%87/"><![CDATA[<p><img src="../../../image/chatbot/chatbot_lachesis.png" width="200" height="400" /></p>

<h1 id="챗봇을-만듭시다">챗봇을 만듭시다.</h1>]]></content><author><name>최윤진</name><email>yunjinchoidev@gmail.com</email></author><category term="chatbot" /><summary type="html"><![CDATA[]]></summary></entry></feed>